volumes:
  n8n_storage:
  postgres_storage:
  redis_storage:
  qdrant_storage:
  flowise_storage:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  n8n-network:
    driver: bridge

x-n8n-common: &n8n-common
  image: n8nio/n8n:latest
  networks:
    - n8n-network
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
    - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-n8n}
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_JWT_SECRET}
    - N8N_HOST=${N8N_HOST:-localhost}
    - N8N_PORT=${N8N_PORT:-5678}
    - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
    - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678/}
    - GENERIC_TIMEZONE=${TIMEZONE:-UTC}
    - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
    - N8N_PERSONALIZATION_ENABLED=true
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_VERSION_NOTIFICATIONS_ENABLED=true
    - N8N_TEMPLATES_ENABLED=true
    - N8N_PUBLIC_API_ENABLED=true
    - N8N_METRICS=false
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_BULL_REDIS_PORT=6379
    - QUEUE_BULL_REDIS_DB=${REDIS_DB:-0}
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - GIT_AUTHOR_NAME=${GIT_AUTHOR_NAME:-n8n User}
    - GIT_AUTHOR_EMAIL=${GIT_AUTHOR_EMAIL:-n8n@localhost}
    - GIT_COMMITTER_NAME=${GIT_COMMITTER_NAME:-n8n User}
    - GIT_COMMITTER_EMAIL=${GIT_COMMITTER_EMAIL:-n8n@localhost}
  env_file:
    - .env
  volumes:
    - n8n_storage:/home/node/.n8n
    - ./backups:/home/node/.n8n/backups
    - ./custom-nodes:/home/node/.n8n/custom
    - ./external-hooks:/home/node/.n8n/external-hooks
    - ./logs:/home/node/.n8n/logs
    - ./shared:/data/shared
    - ./git-config/.ssh:/home/node/.ssh:ro
    - ./git-config/.gitconfig:/home/node/.gitconfig:ro
    - ./git-repos:/home/node/git-repos
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    container_name: n8n-postgres
    networks:
      - n8n-network
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-n8n}
      - POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER:-n8n}
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD:-n8n}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER:-n8n} -d ${POSTGRES_DB:-n8n}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis for Queue Management
  redis:
    image: redis:7-alpine
    hostname: redis
    container_name: n8n-redis
    networks:
      - n8n-network
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_storage:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # n8n Main Application
  n8n:
    <<: *n8n-common
    hostname: n8n
    container_name: n8n-main
    restart: unless-stopped
    ports:
      - "${N8N_PORT:-5678}:5678"

  # n8n Worker (for queue processing)
  n8n-worker:
    <<: *n8n-common
    hostname: n8n-worker
    container_name: n8n-worker
    restart: unless-stopped
    command: worker
    depends_on:
      - n8n


  # Optional: Caddy reverse proxy for HTTPS termination
  caddy:
    image: caddy:2-alpine
    container_name: n8n-caddy
    networks:
      - n8n-network
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/data:/data
      - ./caddy/config:/config
    profiles:
      - https
    depends_on:
      - n8n

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: n8n-qdrant
    hostname: qdrant
    networks:
      - n8n-network
    restart: unless-stopped
    ports:
      - "${QDRANT_HTTP_PORT:-6333}:6333"
      - "${QDRANT_GRPC_PORT:-6334}:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=${QDRANT_LOG_LEVEL:-INFO}

  # Flowise AI Agent Builder
  flowise:
    image: flowiseai/flowise:latest
    container_name: n8n-flowise
    hostname: flowise
    networks:
      - n8n-network
    restart: unless-stopped
    ports:
      - "${FLOWISE_PORT:-3001}:3001"
    environment:
      - PORT=3001
      - FLOWISE_USERNAME=${FLOWISE_USERNAME}
      - FLOWISE_PASSWORD=${FLOWISE_PASSWORD}
      - DATABASE_PATH=/root/.flowise
      - APIKEY_PATH=/root/.flowise
      - SECRETKEY_PATH=/root/.flowise
      - LOG_PATH=/root/.flowise/logs
    volumes:
      - flowise_storage:/root/.flowise
      - ./shared:/data/shared
    depends_on:
      - postgres
      - qdrant

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5-community
    container_name: n8n-neo4j
    hostname: neo4j
    networks:
      - n8n-network
    restart: unless-stopped
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_HTTPS_PORT:-7473}:7473"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH:-neo4j/password}
      - NEO4J_server_memory_pagecache_size=${NEO4J_PAGECACHE_SIZE:-512M}
      - NEO4J_server_memory_heap_initial__size=${NEO4J_HEAP_INITIAL:-512M}
      - NEO4J_server_memory_heap_max__size=${NEO4J_HEAP_MAX:-1G}
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*,gds.*
