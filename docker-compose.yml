version: "3.8"

volumes:
  n8n_storage:
  postgres_storage:
  redis_storage:

networks:
  n8n-network:
    driver: bridge

x-n8n-common: &n8n-common
  image: n8nio/n8n:latest
  networks:
    - n8n-network
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
    - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-n8n}
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_JWT_SECRET}
    - N8N_HOST=${N8N_HOST:-localhost}
    - N8N_PORT=${N8N_PORT:-5678}
    - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
    - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678/}
    - GENERIC_TIMEZONE=${TIMEZONE:-UTC}
    - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
    - N8N_PERSONALIZATION_ENABLED=true
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_VERSION_NOTIFICATIONS_ENABLED=true
    - N8N_TEMPLATES_ENABLED=true
    - N8N_PUBLIC_API_ENABLED=true
    - N8N_METRICS=false
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_BULL_REDIS_PORT=6379
    - QUEUE_BULL_REDIS_DB=${REDIS_DB:-0}
    - QUEUE_HEALTH_CHECK_ACTIVE=true
  env_file:
    - .env
  volumes:
    - n8n_storage:/home/node/.n8n
    - ./backups:/home/node/.n8n/backups
    - ./custom-nodes:/home/node/.n8n/custom
    - ./external-hooks:/home/node/.n8n/external-hooks
    - ./logs:/home/node/.n8n/logs
    - ./shared:/data/shared
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    container_name: n8n-postgres
    networks:
      - n8n-network
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-n8n}
      - POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER:-n8n}
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD:-n8n}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER:-n8n} -d ${POSTGRES_DB:-n8n}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis for Queue Management
  redis:
    image: redis:7-alpine
    hostname: redis
    container_name: n8n-redis
    networks:
      - n8n-network
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_storage:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # n8n Main Application
  n8n:
    <<: *n8n-common
    hostname: n8n
    container_name: n8n-main
    restart: unless-stopped
    ports:
      - "${N8N_PORT:-5678}:5678"

  # n8n Worker (for queue processing)
  n8n-worker:
    <<: *n8n-common
    hostname: n8n-worker
    container_name: n8n-worker
    restart: unless-stopped
    command: n8n worker
    depends_on:
      - n8n

  # n8n Webhook Process (optional, for high-throughput webhook handling)
  n8n-webhook:
    <<: *n8n-common
    hostname: n8n-webhook
    container_name: n8n-webhook
    restart: unless-stopped
    ports:
      - "${N8N_WEBHOOK_PORT:-5679}:5678"
    environment:
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5679/}
      - N8N_DISABLE_UI=true
    command: n8n webhook
    depends_on:
      - n8n

  # Optional: Caddy reverse proxy for HTTPS termination
  caddy:
    image: caddy:2-alpine
    container_name: n8n-caddy
    networks:
      - n8n-network
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/data:/data
      - ./caddy/config:/config
    profiles:
      - https
    depends_on:
      - n8n
